name: Push to DockerHub
on:
  workflow_dispatch:
    inputs:
      IMAGE_TAG:
        required: false
        default:
        type: string
        description: "Defaults to imxeren/docker-py-revanced"
      PLATFORMS:
        required: false
        default: linux/amd64,linux/arm64,linux/arm64/v8
        type: string
      FILE:
        required: false
        type: string
  push:
    branches:
      - "main"
    paths:
      - "**.py"
      - "README.md"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  check-image-tag:
    runs-on: ubuntu-latest
    outputs:
      IMAGE_TAG: ${{ steps.tag-name.outputs.IMAGE_TAG }}
      REPO_NAME: ${{ steps.tag-name.outputs.REPO_NAME }}
    steps:
      - name: Setting image tag name
        id: tag-name
        run: |
          image_tag="${{ inputs.IMAGE_TAG || 'imxeren/docker-py-revanced:latest' }}"
          IFS=":" read -ra parts <<< "${image_tag}:dummy"
          repo_name="${parts[0]}"
          echo "IMAGE_TAG=$image_tag" >> $GITHUB_OUTPUT
          echo "REPO_NAME=$repo_name" >> $GITHUB_OUTPUT

  docker:
    if: github.repository == 'IMXEren/rvx-builds'
    needs: check-image-tag
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3.0.0
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.2.0
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v5.3.0
        with:
          push: true
          platforms: ${{ inputs.PLATFORMS }}
          tags: ${{ needs.check-image-tag.outputs.IMAGE_TAG }}
          file: ${{ inputs.FILE }}
      - name: Update repo description
        uses: peter-evans/dockerhub-description@v4.0.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          repository: ${{ needs.check-image-tag.outputs.REPO_NAME }}
          short-description: ${{ github.event.repository.description }}
